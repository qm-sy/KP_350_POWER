C51 COMPILER V9.60.7.0   EEPROM_CRL                                                        02/05/2025 16:57:40 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE EEPROM_CRL
OBJECT MODULE PLACED IN ..\Output\eeprom_crl.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE ..\BSP\Src\eeprom_crl.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP
                    -\Inc;..\Core\Inc;..\Driver;..\Emembed\Inc;..\SYSTEM\Inc) DEBUG OBJECTEXTEND PRINT(.\Listings\eeprom_crl.lst) OBJECT(..\O
                    -utput\eeprom_crl.obj)

line level    source

   1          #include "eeprom_crl.h"
   2          
   3          EEPROM_INFO eeprom;
   4          
   5          /**
   6           * @brief       eeprom状态判定，是否写入过
   7           *
   8           * @param   
   9           *
  10           * @return  void
  11          **/
  12          void eeprom_statu_judge( void )
  13          {
  14   1          uint8_t eeprom_statu_flag;
  15   1      
  16   1          eeprom_statu_flag = ISP_Read(EEPROM_STATU_JUDGE);
  17   1          if( eeprom_statu_flag == 0xFF)
  18   1          {
  19   2              eeprom.pwm_info          = 0x6f;          //011 011 11 pwm7、8默认开，3档风速
  20   2              eeprom.led_info          = 0x01;          //0000000 1  led默认开
  21   2              eeprom.ac220_info        = 0x65;          //0110010 1  220V_CH4默认开，50%功率
  22   2              eeprom.temp_alarm_value1 = 0x50;          //NTC1 alarm value 默认80℃
  23   2              eeprom.temp_alarm_value2 = 0x50;          //NTC2 alarm value 默认80℃  
  24   2              eeprom.temp_alarm_value3 = 0x50;          //NTC3 alarm value 默认80℃ 
  25   2      
  26   2              eeprom_data_record(); 
  27   2      
  28   2              ISP_Write(0x0010,0x58);     //特定位置设定标志位区分是否首次上电
  29   2          }else
  30   1          {
  31   2              eeprom_data_init();    
  32   2          }
  33   1      }
  34          
  35          /**
  36           * @brief       eeprom 数据写入
  37           *
  38           * @param   
  39           *
  40           * @return  void
  41          **/
  42          void eeprom_data_record( void )
  43          {
  44   1          ISP_Earse(0x0000);
  45   1      
  46   1          ISP_Write(PWM_ADDR_EEPROM,eeprom.pwm_info);
  47   1          ISP_Write(LED_ADDR_EEPROM,eeprom.led_info);
  48   1          ISP_Write(AC220_ADDR_EEPROM,eeprom.ac220_info);
  49   1          ISP_Write(TEMP_ALARM1,eeprom.temp_alarm_value1);
  50   1          ISP_Write(TEMP_ALARM2,eeprom.temp_alarm_value2);
  51   1          ISP_Write(TEMP_ALARM3,eeprom.temp_alarm_value3);
  52   1      }
  53          
C51 COMPILER V9.60.7.0   EEPROM_CRL                                                        02/05/2025 16:57:40 PAGE 2   

  54          /**
  55           * @brief       eeprom 数据初始化
  56           *
  57           * @param   
  58           *
  59           * @return  void
  60          **/
  61          void eeprom_data_init( void )
  62          {
  63   1          /*    PWM7、PWM8 风速及开关状态初始化    */
  64   1          eeprom.pwm_info = ISP_Read(PWM_ADDR_EEPROM);
  65   1          PWMB_CCR7 = ((eeprom.pwm_info>>2) & 0x07)*184;
  66   1          PWMB_CCR8 = (eeprom.pwm_info>>5)*184;
  67   1          if( eeprom.pwm_info & 0X01 )
  68   1          {
  69   2              PWMB_CCER2 |= 0X01;
  70   2          }else
  71   1          {
  72   2              PWMB_CCER2 &= 0XFE;
  73   2          }
  74   1          if( eeprom.pwm_info & 0X02 )
  75   1          {
  76   2              PWMB_CCER2 |= 0X10;
  77   2          }else
  78   1          {
  79   2              PWMB_CCER2 &= 0XEF;
  80   2          }
  81   1      
  82   1          /*    LED开关状态初始化    */
  83   1          eeprom.led_info = ISP_Read(LED_ADDR_EEPROM);
  84   1          if( eeprom.led_info & 0X01 )
  85   1          {
  86   2              DC_24V_out(1);
  87   2          }else
  88   1          {
  89   2              DC_24V_out(0);
  90   2          }
  91   1      
  92   1          /*    220V输出开关状态初始化    */
  93   1          eeprom.ac220_info = ISP_Read(AC220_ADDR_EEPROM);
  94   1          if( eeprom.ac220_info & 0X01 )
  95   1          {
  96   2              EX0 = 1;
  97   2          }else
  98   1          {
  99   2              EX0 = 0;
 100   2          }
 101   1          AC_220V_out(eeprom.ac220_info>>1);
 102   1      
 103   1          /*    三路NTC alarm value初始化    */
 104   1          eeprom.temp_alarm_value1 = ISP_Read(TEMP_ALARM1);
 105   1          eeprom.temp_alarm_value2 = ISP_Read(TEMP_ALARM2);
 106   1          eeprom.temp_alarm_value3 = ISP_Read(TEMP_ALARM3);
 107   1      
 108   1          temp.power_ch1_temp_alarm = eeprom.temp_alarm_value1;
 109   1          temp.power_ch2_temp_alarm = eeprom.temp_alarm_value2;
 110   1          temp.power_ch2_temp_alarm = eeprom.temp_alarm_value3;
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    322    ----
C51 COMPILER V9.60.7.0   EEPROM_CRL                                                        02/05/2025 16:57:40 PAGE 3   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
