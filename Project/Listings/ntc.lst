C51 COMPILER V9.60.7.0   NTC                                                               01/25/2025 10:52:13 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE NTC
OBJECT MODULE PLACED IN ..\Output\ntc.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE ..\BSP\Src\ntc.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP\Inc;..
                    -\Core\Inc;..\Driver;..\Emembed\Inc;..\SYSTEM\Inc) DEBUG OBJECTEXTEND PRINT(.\Listings\ntc.lst) OBJECT(..\Output\ntc.obj)

line level    source

   1          #include "ntc.h"
   2          
   3          #define NTCTabNum 121
   4          static uint16_t MF52E_tab[NTCTabNum]={
   5              282,/* 0 */
   6              291,/* 1 */     300,/* 2 */     309,/* 3 */     318,/* 3 */     327,/* 5 */
   7              337,/* 6 */     346,/* 7 */     356,/* 8 */     366,/* 9 */     375,/* 10 */
   8              385,/* 11 */    395,/* 12 */    404,/* 13 */    414,/* 14 */    424,/* 15 */
   9              434,/* 16 */    444,/* 17 */    454,/* 18 */    463,/* 19 */    473,/* 20 */
  10              483,/* 21 */    493,/* 22 */    502,/* 23 */    512,/* 24 */    522,/* 25 */
  11              531,/* 26 */    541,/* 27 */    550,/* 28 */    559,/* 29 */    568,/* 30 */
  12              578,/* 31 */    587,/* 32 */    596,/* 33 */    604,/* 34 */    613,/* 35 */
  13              622,/* 36 */    630,/* 37 */    639,/* 38 */    647,/* 39 */    655,/* 40 */
  14              663,/* 41 */    671,/* 42 */    679,/* 43 */    687,/* 44 */    694,/* 45 */
  15              702,/* 46 */    709,/* 47 */    716,/* 48 */    723,/* 49 */    730,/* 50 */
  16              737,/* 51 */    743,/* 52 */    750,/* 53 */    756,/* 54 */    763,/* 55 */
  17              769,/* 56 */    775,/* 57 */    781,/* 58 */    786,/* 59 */    792,/* 60 */
  18              797,/* 61 */    803,/* 62 */    808,/* 63 */    813,/* 64 */    818,/* 65 */
  19              823,/* 66 */    828,/* 67 */    833,/* 68 */    837,/* 69 */    842,/* 70 */
  20              846,/* 71 */    850,/* 72 */    854,/* 73 */    858,/* 74 */    862,/* 75 */
  21              866,/* 76 */    870,/* 77 */    874,/* 78 */    877,/* 79 */    881,/* 80 */
  22              884,/* 81 */    888,/* 82 */    891,/* 83 */    894,/* 84 */    897,/* 85 */
  23              900,/* 86 */    903,/* 87 */    906,/* 88 */    909,/* 89 */    911,/* 90 */
  24              914,/* 91 */    917,/* 92 */    919,/* 93 */    921,/* 94 */    924,/* 95 */
  25              926,/* 96 */    928,/* 97 */    931,/* 98 */    933,/* 99 */    935,/* 100 */
  26              937,/* 101 */   939,/* 102 */   941,/* 103 */   943,/* 104 */   945,/* 105 */
  27              946,/* 106 */   948,/* 107 */   950,/* 108 */   952,/* 109 */   953,/* 110 */
  28              955,/* 111 */   956,/* 112 */   958,/* 113 */   959,/* 114 */   961,/* 115 */
  29              962,/* 116 */   964,/* 117 */   965,/* 118 */   966,/* 119 */   967 /* 120 */
  30          };      
  31          
  32          /**
  33           * @brief 查表 找到adc_val对应的temp
  34           *
  35           * @param[in] temp_tab 对照表
  36           * @param[in] tab_num 表元素个数
  37           * @param[in] adc_val adc_val
  38           * 
  39           * @return  temp
  40           * 
  41          **/
  42          static uint16_t LookupTable( uint16_t *temp_tab, uint8_t tab_num, uint16_t adc_val )
  43          {
  44   1                      uint8_t i;
  45   1              uint16_t temp_val;
  46   1              
  47   1                      for( i = 0; i < (tab_num-1); i++ )
  48   1                      {
  49   2                                      if(( adc_val >= temp_tab[i] ) && ( adc_val < temp_tab[i+1]) )
  50   2                                      temp_val = i;   
  51   2                      }
  52   1                      return temp_val;
  53   1      }
  54          
C51 COMPILER V9.60.7.0   NTC                                                               01/25/2025 10:52:13 PAGE 2   

  55          /**
  56           * @brief 取10次adc_val均值对应的temp
  57           *
  58           * @param[in] channle_x ntc通道1~4
  59           * 
  60           * @return  temp :最终温度
  61           * 
  62          **/
  63          uint16_t get_temp( uint8_t channle_x )
  64          {
  65   1          uint8_t t;
  66   1          uint16_t adc_val;
  67   1          uint16_t temp;
  68   1      
  69   1          /* 1, 取10次adc_val                           */
  70   1          for( t = 0; t < 10; t++ )
  71   1                      {
  72   2                              adc_val += Get_ADC_12bit(channle_x);
  73   2                      }              
  74   1          adc_val = adc_val/10;
  75   1      
  76   1          /* 2, 查表，找到对应温度值                     */
  77   1          temp = LookupTable( MF52E_tab, NTCTabNum, adc_val );
  78   1      
  79   1          return temp;
  80   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    222    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    242      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
